<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>co.salutary.mobisaude</groupId>
	<artifactId>mobisaude-services</artifactId>
	<packaging>war</packaging>
	<version>0.0.1</version>
	<name>mobisaude-services</name>

	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.springframework.version>3.2.4.RELEASE</org.springframework.version>
		<github.maven.repository>file:///opt/maven_repository/</github.maven.repository>
	</properties>

	<dependencies>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.1.9.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.0.Final</version>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>8.2-504.jdbc3</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jettison</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<!-- Se o container implementa a API Servlet anterior a 3.0, use "jersey-container-servlet-core" -->
			<artifactId>jersey-container-servlet</artifactId>
			<version>2.3.1</version>
		</dependency>
		<!-- Necesario somente se usando JAX-RS Client -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.3.1</version>
		</dependency>
		<!-- Utilitarios core usados por outros modulos. Defina se estiver usando Spring Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Expression Language (depende de spring-core) Defina se estiver usando Spring Expression APIs (org.springframework.expression.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Bean Factory e JavaBeans utilities (depende de spring-core) Defina se estiver usando Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Aspect Oriented Programming (AOP) Framework (depende de spring-core, spring-beans) Defina se estiver usando 
			Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Application Context (depende de spring-core, spring-expression, spring-aop, spring-beans) Este e o artefato 
			central para o Spring Dependency Injection Container e geralmente e definido -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Varios utilitarios Application Context, incluindo EhCache, JavaMail, Quartz, e Freemarker integration Defina 
			se precisar de alguma dessas integracoes -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context) Defina 
			se estiver usando Spring Transactions ou DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- JDBC Data Access Library (depende de spring-core, spring-beans, spring-context, spring-tx) Defina se estiver 
			usando Spring JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Object-to-Relation-Mapping (ORM) integracao com Hibernate, JPA, e iBatis. (depende de spring-core, spring-beans, 
			spring-context, spring-tx) Defina se precisar de ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Object-to-XML Mapping (OXM) abstracao e integracao com JAXB, JiBX, Castor, XStream, and XML Beans. (depende 
			de spring-core, spring-beans, spring-context) Defina se precisar de OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Utilitarios para desenvolvimento de aplicacoes Web aplica-se a Servlet e Portlet (depende de spring-core, 
			spring-beans, spring-context) Defina se estiver usando Spring MVC, ou prentende usar Struts, JSF, ou outro framework 
			web em conjunto com o Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Spring MVC for Servlet Environments (depende de spring-core, spring-beans, spring-context, spring-web) Defina 
			se estiver usando Spring MVC com um Servlet Container como o Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Spring MVC for Portlet Environments (depende de spring-core, spring-beans, spring-context, spring-web) Defina 
			se estiver usando Spring MVC com um Portlet Container (org.springframework.web.portlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Suporte para teste de aplicacoes Spring com ferramentas como JUnit e TestNG Este artefato geralmente e definido 
			com um escopo 'test' para a os testes de integracao e stubs de teste unitario -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<!-- Jackson-Databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.1.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>mobisaude-services</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<packagingExcludes>WEB-INF/lib/servlet-api-2.5.jar</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<format>xml</format>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
	<scm>
		<connection>scm:git:git@github.com:tpbvieira/mobisaude.git</connection>
		<developerConnection>scm:git:git@github.com:tpbvieira/mobisaude.git</developerConnection>
		<url>https://github.com/tpbvieira/mobisaude</url>
		<tag>mobisaude-services-0.0.1</tag>
	</scm>
	<distributionManagement>
		<repository>
			<id>maven-repository</id>
			<url>${github.maven.repository}</url>
		</repository>
	</distributionManagement>
</project>
